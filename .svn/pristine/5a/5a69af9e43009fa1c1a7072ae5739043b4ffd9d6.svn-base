import { useState } from "react";
import Tabs from "../../components/Tabs/Tabs";
import { stateStore } from "../../store/stateStore";
import SelectGeneric from "../../components/Selects/SelectGeneric";
import Pagination from "../../components/Paginations/Pagination";
import InputDate from "../../components/Inputs/InputDate";
import ButtonWithIcon from "../../components/Buttons/ButtonWithIcon";
import InputTime from "../../components/Inputs/InputTime";
import ColumnTable from "../../components/Tables/ColumnTable";
import Select from "../../components/Selects/Select";

const WorkerRequest = () => {
  const [activeTab, setActiveTab] = useState(1);
  const { setOpenNotifications } = stateStore();
  const handleTabClick = (tab) => {
    setActiveTab(tab);
  };

  const tabs = [
    { id: 1, label: "Registrar solicitud" },
    { id: 2, label: "Solicitudes" },
    { id: 3, label: "Consolidado" },
  ];

  const columnTitles = [
    "Cliente",
    "Formato",
    "Pieza ",
    "Descripción pieza",
    "Requerimientos pieza ",
    "Fecha de entrega ",
    "Responsable",
    "Horas estimadas",
    "Horas reales",
    "Fecha de trabajo ",
    "Estado ",
    "Observaciones ",
    "",
  ];

  const columnWidths = [
    "w-44", // Ancho para Columna 1
    "w-[400px]", // Ancho para Columna 2
    "w-44", // Ancho para Columna 3
    "w-44", // Ancho para Columna 4
    "w-52", // Ancho para Columna 5
    "w-72", // Ancho para Columna 6
    "w-64", // Ancho para Columna 7
    "w-72", // Ancho para Columna 8
    "w-32", // Ancho para Columna 9
    "w-44", // Ancho para Columna 10
    "w-64", // Ancho para Columna 11
    "w-44", // Ancho para Columna 12
    "w-44", // Ancho para Columna 13
  ];

  const [initialOptionSelect, setInitialOptionSelect] = useState("Cliente");

  const options = [
    { id: 1, value: "SmartPR" },
    { id: 2, value: "MTC" },
    { id: 3, value: "Ford" },
    { id: 4, value: "Toyota" },
  ];
  const handleSelect = (selectedOption) => {
    setInitialOptionSelect(selectedOption);
  };

  return (
    <div className="flex flex-col" onClick={() => setOpenNotifications(false)}>
      <div className="w-full flex justify-between z-[2]">
        <div className="flex items-end tab">
          <div className="flex items-end">
            <Tabs
              tabs={tabs}
              activeTab={activeTab}
              handleTabClick={handleTabClick}
            />
          </div>
        </div>
        {activeTab === 2 && (
          <div className="flex gap-3 items-center mb-2">
            <Select
              options={options}
              onSelect={handleSelect}
              initialOption={initialOptionSelect}
              readOnly={false}
              editStatus={true}
            />
          </div>
        )}
      </div>

      <div className="bg-white rounded-bl-md rounded-r-md overflow-auto h-[660px]">
        {activeTab === 1 && (
          <div className="overflow-x-auto h-full">
            <div className="min-w-max">
              <div className="w-full flex px-6 py-5">
                <div className="w-full flex gap-7">
                  <div className="flex flex-col gap-2">
                    <h2>Cliente</h2>
                    <SelectGeneric
                      options={[]}
                      initialOption={""}
                      key_name=""
                      handleChange={() => {}}
                      styleSelect={"w-[157px]"}
                    />
                  </div>
                  <div className="flex flex-col gap-2">
                    <h2>Formato</h2>
                    <SelectGeneric
                      options={[]}
                      initialOption={""}
                      key_name=""
                      handleChange={() => {}}
                      styleSelect={"w-[157px]"}
                    />
                  </div>
                  <div className="flex flex-col gap-2">
                    <h2>Pieza</h2>
                    <SelectGeneric
                      options={[]}
                      initialOption={""}
                      key_name=""
                      handleChange={() => {}}
                      styleSelect={"w-[157px]"}
                    />
                  </div>
                  <div className="flex flex-col gap-2">
                    <h2>Proceso</h2>
                    <SelectGeneric
                      options={[]}
                      initialOption={""}
                      key_name=""
                      handleChange={() => {}}
                      styleSelect={"w-[157px]"}
                    />
                  </div>
                  <div className="flex flex-col gap-2">
                    <h2>Actividad</h2>
                    <SelectGeneric
                      options={[]}
                      initialOption={""}
                      key_name=""
                      handleChange={() => {}}
                      styleSelect={"w-[157px]"}
                    />
                  </div>
                </div>
                <div className="flex flex-col gap-2">
                  <h2>Responsable</h2>
                  <SelectGeneric
                    options={[]}
                    initialOption={""}
                    key_name=""
                    handleChange={() => {}}
                    styleSelect={"w-[157px]"}
                  />
                </div>
              </div>
              <div className="w-full flex flex-col gap-4 px-6">
                <div className="flex flex-col gap-3 ">
                  <span>Descripción pieza</span>
                  <textarea
                    name="descripcion_pieza"
                    id="descripcion_pieza"
                    cols="30"
                    rows="10"
                    className="w-full rounded-md p-2 shadow-3xl h-[120px]"
                  ></textarea>
                </div>
                <div className="flex flex-col gap-3">
                  <span>Requerimientos pieza</span>
                  <textarea
                    name="descripcion_pieza"
                    id="descripcion_pieza"
                    cols="30"
                    rows="10"
                    className="w-full rounded-md p-2 shadow-3xl h-[120px]"
                  ></textarea>
                </div>
              </div>
              <div className="w-1/2 flex gap-8 px-6 py-8 justify-start">
                <div className="w-max flex flex-col gap-3">
                  <span>Fecha entrega</span>
                  <InputDate position={"absolute top-11 -right-20"} />
                </div>
                <div className="w-max flex flex-col gap-3">
                  <span>Hora estimada </span>
                  <InputTime
                    handleChange={() => {}}
                    defaultValue={""}
                    key_name={""}
                    type={"time"}
                  />
                </div>
                <div className="w-max flex flex-col gap-3">
                  <span>Hora realal</span>
                  <InputTime
                    handleChange={() => {}}
                    defaultValue={""}
                    key_name={""}
                    type={"time"}
                  />
                </div>
              </div>
              <div className="w-full flex flex-col gap-4 px-6">
                <div className="flex flex-col gap-3 ">
                  <span>Descripción pieza</span>
                  <textarea
                    name="descripcion_pieza"
                    id="descripcion_pieza"
                    cols="30"
                    rows="10"
                    className="w-full rounded-md p-2 shadow-3xl h-[100px]"
                  ></textarea>
                </div>
              </div>
              <div className="flex justify-end py-8 px-6">
                <ButtonWithIcon text="Registrar solicitud" onClick={() => {}} />
              </div>
            </div>
          </div>
        )}

        {activeTab === 2 && (
          <div className="overflow-x-auto h-full">
            <div className="min-w-max">
              <div className="w-full p-3">
                <table className="min-w-full">
                  <thead>
                    <ColumnTable
                      columnTitlesActivity={columnTitles}
                      columnWidths={columnWidths}
                      readOnly={false}
                    />
                  </thead>
                  <tbody className="border-b border-gray-300"></tbody>
                </table>
              </div>
            </div>
          </div>
        )}
      </div>
      {activeTab === 3 && (
        <div className="flex justify-end">
          <Pagination />
        </div>
      )}
    </div>
  );
};

export default WorkerRequest;
